server.host=127.0.0.1
server.port=8080
server.maxPoolSize=16
server.keepAliveTimeMs=1000
client.maxPoolSize=16
client.keepAliveTimeMs=1000
client.connectTimeoutMs=5000
# param list is a pipe-separated list of parameters defined in this file
rest2soap.service.updateCustomer.paramList=trackingHeader
# targetUrl is the URL of the SOAP service
rest2soap.service.updateCustomer.targetUrl=http://localhost:9090/CustomerServicePort
# restPath is the URI of REST service, may include path parameters in the format {parameterName}
rest2soap.service.updateCustomer.restPath=/customer
# restMethod may be get post put patch delete
rest2soap.service.updateCustomer.restMethod=post
# For some reason, the WSDL exposed by CXF is missing the simpleType restrictions, therefore we read the WSDL from the disk
#rest2soap.service.updateCustomer.wsdlUrl=http://localhost:9090/CustomerServicePort?wsdl=CustomerService.wsdl
rest2soap.service.updateCustomer.wsdlUrl=file://testdata/input/CustomerService.wsdl
rest2soap.service.updateCustomer.operationName=updateCustomer
rest2soap.service.updateCustomer.description=Insert or Update a Customer
rest2soap.service.getCustomersByName.paramList=customerName|trackingHeader
rest2soap.service.getCustomersByName.targetUrl=http://localhost:9090/CustomerServicePort
rest2soap.service.getCustomersByName.restPath=/customer
rest2soap.service.getCustomersByName.restMethod=get
#rest2soap.service.getCustomersByName.wsdlUrl=http://localhost:9090/CustomerServicePort?wsdl=CustomerService.wsdl
rest2soap.service.getCustomersByName.wsdlUrl=file://testdata/input/CustomerService.wsdl
rest2soap.service.getCustomersByName.operationName=getCustomersByName
rest2soap.service.getCustomersByName.description=Find Customers by name
rest2soap.service.getCustomer.paramList=customerId|trackingHeader
rest2soap.service.getCustomer.targetUrl=http://localhost:9090/CustomerServicePort
rest2soap.service.getCustomer.restPath=/customer/{customerId}
rest2soap.service.getCustomer.restMethod=get
#rest2soap.service.getCustomer.wsdlUrl=http://localhost:9090/CustomerServicePort?wsdl=CustomerService.wsdl
rest2soap.service.getCustomer.wsdlUrl=file://testdata/input/CustomerService.wsdl
rest2soap.service.getCustomer.operationName=getCustomer
rest2soap.service.getCustomer.description=Get Customer by ID
rest2soap.service.deleteCustomer.paramList=customerId|trackingHeader
rest2soap.service.deleteCustomer.targetUrl=http://localhost:9090/CustomerServicePort
rest2soap.service.deleteCustomer.restPath=/customer/{customerId}
rest2soap.service.deleteCustomer.restMethod=delete
#rest2soap.service.deleteCustomer.wsdlUrl=http://localhost:9090/CustomerServicePort?wsdl=CustomerService.wsdl
rest2soap.service.deleteCustomer.wsdlUrl=file://testdata/input/CustomerService.wsdl
rest2soap.service.deleteCustomer.operationName=deleteCustomer
rest2soap.service.deleteCustomer.description=Delete Customer identified by ID
# parameter name will be used in the OAS spec
rest.params.customerName.name=customerName
# paramType may be query header or path
rest.params.customerName.paramType=query
# oasTypeDef is a pipe-separated list of type definition, as in JSON Schema, e.g.: type:string|format:date or type:string|pattern:$[a-zA-Z0-9_]+^
rest.params.customerName.oasTypeDef=type:string
rest.params.customerName.multiValue=false
rest.params.customerName.required=true
rest.params.customerName.jsonPath=name
rest.params.customerName.description=Customer name
rest.params.customerId.name=customerId
rest.params.customerId.paramType=path
rest.params.customerId.oasTypeDef=type:integer
rest.params.customerId.multiValue=false
rest.params.customerId.required=true
rest.params.customerId.jsonPath=customerId
rest.params.customerId.description=Customer ID
rest.params.trackingHeader.name=X-Tracking-Header
rest.params.trackingHeader.paramType=header
rest.params.trackingHeader.oasTypeDef=type:string
rest.params.trackingHeader.multiValue=false
rest.params.trackingHeader.required=false
rest.params.trackingHeader.jsonPath=xTrackingHeader
rest.params.trackingHeader.description=Tracking ID